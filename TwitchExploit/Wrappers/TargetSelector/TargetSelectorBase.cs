// --------------------------------------------------------------------------------------------------------------------
// <copyright file="TargetSelectorBase.cs" company="TwitchExploit">
//     Copyright (c) TwitchExploit. All rights reserved.
// </copyright>
// --------------------------------------------------------------------------------------------------------------------
namespace TwitchExploit.Wrappers.TargetSelector
{
    using System.Security;

    using LeagueSharp;
    using LeagueSharp.Common;

    [SecuritySafeCritical]
    public abstract class TargetSelectorBase : ITargetSelector
    {
        public bool IsActive { get; protected set; }

        public Obj_AI_Hero Player => ObjectManager.Player;

        [SecuritySafeCritical]
        public abstract void Activate();

        [SecuritySafeCritical]
        public abstract void Deactivate();

        [SecuritySafeCritical]
        public Obj_AI_Hero GetHeroTarget(float range, DamageType type = DamageType.Physical)
        {
            var selectedTarget = this.GetSelectedTarget(range, type);

            if (selectedTarget != null && this.Player.Distance(selectedTarget) < range)
            {
                return (Obj_AI_Hero)selectedTarget;
            }

            return (Obj_AI_Hero)this.GetTarget(range, type);
        }

        [SecuritySafeCritical]
        public abstract AttackableUnit GetSelectedTarget(float range, DamageType type);

        [SecuritySafeCritical]
        public abstract AttackableUnit GetTarget(float range, DamageType type);
    }
}